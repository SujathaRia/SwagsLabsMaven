<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="2" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="9976" started-at="2023-06-20T11:45:57Z" finished-at="2023-06-20T11:46:07Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="9976" started-at="2023-06-20T11:45:57Z" finished-at="2023-06-20T11:46:07Z">
      <class name="Testcases.LoginTest">
        <test-method status="PASS" signature="ReportSetup()[pri:0, instance:Testcases.LoginTest@7403c468]" name="ReportSetup" is-config="true" duration-ms="482" started-at="2023-06-20T11:45:57Z" finished-at="2023-06-20T11:45:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReportSetup -->
        <test-method status="PASS" signature="SetUp(java.lang.reflect.Method)[pri:0, instance:Testcases.LoginTest@7403c468]" name="SetUp" is-config="true" duration-ms="1266" started-at="2023-06-20T11:45:57Z" finished-at="2023-06-20T11:45:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Testcases.LoginTest.InvalidLogin(java.lang.reflect.Method) throws com.codoid.products.exception.FilloException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="InvalidLogin(java.lang.reflect.Method)[pri:0, instance:Testcases.LoginTest@7403c468]" name="InvalidLogin" duration-ms="3412" started-at="2023-06-20T11:45:58Z" finished-at="2023-06-20T11:46:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Testcases.LoginTest.InvalidLogin(java.lang.reflect.Method) throws com.codoid.products.exception.FilloException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InvalidLogin -->
        <test-method status="PASS" signature="TearDown()[pri:0, instance:Testcases.LoginTest@7403c468]" name="TearDown" is-config="true" duration-ms="71" started-at="2023-06-20T11:46:02Z" finished-at="2023-06-20T11:46:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp(java.lang.reflect.Method)[pri:0, instance:Testcases.LoginTest@7403c468]" name="SetUp" is-config="true" duration-ms="983" started-at="2023-06-20T11:46:02Z" finished-at="2023-06-20T11:46:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Testcases.LoginTest.ValidLogin(java.lang.reflect.Method) throws com.codoid.products.exception.FilloException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="ValidLogin(java.lang.reflect.Method)[pri:0, instance:Testcases.LoginTest@7403c468]" name="ValidLogin" duration-ms="3407" started-at="2023-06-20T11:46:03Z" finished-at="2023-06-20T11:46:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Testcases.LoginTest.ValidLogin(java.lang.reflect.Method) throws com.codoid.products.exception.FilloException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidLogin -->
        <test-method status="PASS" signature="TearDown()[pri:0, instance:Testcases.LoginTest@7403c468]" name="TearDown" is-config="true" duration-ms="68" started-at="2023-06-20T11:46:06Z" finished-at="2023-06-20T11:46:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="ReportClean()[pri:0, instance:Testcases.LoginTest@7403c468]" name="ReportClean" is-config="true" duration-ms="270" started-at="2023-06-20T11:46:06Z" finished-at="2023-06-20T11:46:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReportClean -->
      </class> <!-- Testcases.LoginTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
